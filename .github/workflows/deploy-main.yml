name: "GKE infra Terraform deployment"

on:
  push:
    branches:
      - main

env:
  TF_VAR_environment: test
  TF_VAR_service_account: ${{ secrets.SERVICE_ACCOUNT }}

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.4.0'
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Terraform Init
        id: init
        run: terraform init

      # - name: 'Unlock terraform state'
      #   run: terraform force-unlock -force lock_id
          
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: false

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        # if: github.ref == 'refs/heads/master' && github.event_name == 'push' 
        run: terraform apply -auto-approve

      - name: 'Configure gcloud doker'
        working-directory: ./src
        run: gcloud auth configure-docker

      - name: 'Docker build'
        working-directory: ./src
        run: docker build -t flask-api .

      - name: 'Tag image for container registry'
        working-directory: ./src
        run: docker tag flask-api:latest eu.gcr.io/project-texas/flask-api

      - name: 'Push to container registry'
        working-directory: ./src
        run: docker push eu.gcr.io/project-texas/flask-api

      - id: get-gke-credentials
        uses: google-github-actions/get-gke-credentials@v0.4.0
        with:
          cluster_name: test-project-texas-cluster
          location: europe-west1

      # - id: get-pods
      #   run: kubectl get pods

      - name: 'Apply deployment'
        working-directory: ./kubernetes
        run: kubectl create -f deployment.yaml

      - name: 'Apply service'
        working-directory: ./kubernetes
        run: kubectl create -f service.yaml
      
      - name: 'Apply ingress'
        working-directory: ./kubernetes
        run: kubectl create -f ingress.yaml


      # - name: Terraform destroy
      #   # if: github.ref == 'refs/heads/master' && github.event_name == 'push' 
      #   run: terraform destroy -auto-approve
